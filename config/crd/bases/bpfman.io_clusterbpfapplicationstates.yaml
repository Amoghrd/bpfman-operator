---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: clusterbpfapplicationstates.bpfman.io
spec:
  group: bpfman.io
  names:
    kind: ClusterBpfApplicationState
    listKind: ClusterBpfApplicationStateList
    plural: clusterbpfapplicationstates
    singular: clusterbpfapplicationstate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.node
      name: Node
      type: string
    - jsonPath: .status.conditions[0].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterBpfApplicationState contains the per-node state of a BpfApplication.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BpfApplicationSpec defines the desired state of BpfApplication
            properties:
              appLoadStatus:
                description: |-
                  AppLoadStatus reflects the status of loading the bpf application on the
                  given node.
                type: string
              node:
                description: Node is the name of the node for this BpfApplicationStateSpec.
                type: string
              programs:
                description: |-
                  Programs is a list of bpf programs contained in the parent application.
                  It is a map from the bpf program name to BpfApplicationProgramState
                  elements.
                items:
                  description: ClBpfApplicationProgramState defines the desired state
                    of BpfApplication
                  properties:
                    fentryInfo:
                      description: fentry defines the desired state of the application's
                        FentryPrograms.
                      properties:
                        function:
                          description: Function is the name of the function to attach
                            the Fentry program to.
                          type: string
                        links:
                          default: []
                          items:
                            properties:
                              linkId:
                                description: |-
                                  An identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  LinkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              shouldAttach:
                                description: ShouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: Unique identifier for the attach point
                                  assigned by bpfman agent.
                                type: string
                            required:
                            - linkId
                            - linkStatus
                            - shouldAttach
                            - uuid
                            type: object
                          maxItems: 1
                          type: array
                      required:
                      - function
                      type: object
                    fexitInfo:
                      description: fexit defines the desired state of the application's
                        FexitPrograms.
                      properties:
                        function:
                          description: Function is the name of the function to attach
                            the Fexit program to.
                          type: string
                        links:
                          default: []
                          items:
                            properties:
                              linkId:
                                description: |-
                                  An identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  LinkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              shouldAttach:
                                description: ShouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: Unique identifier for the attach point
                                  assigned by bpfman agent.
                                type: string
                            required:
                            - linkId
                            - linkStatus
                            - shouldAttach
                            - uuid
                            type: object
                          maxItems: 1
                          type: array
                      required:
                      - function
                      type: object
                    kprobeInfo:
                      description: kprobe defines the desired state of the application's
                        KprobePrograms.
                      properties:
                        links:
                          default: []
                          description: |-
                            List of attach points for the BPF program on the given node. Each entry
                            in *AttachInfoState represents a specific, unique attach point that is
                            derived from *AttachInfo by fully expanding any selectors.  Each entry
                            also contains information about the attach point required by the
                            reconciler
                          items:
                            properties:
                              function:
                                description: Function to attach the kprobe to.
                                type: string
                              linkId:
                                description: |-
                                  An identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  LinkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              offset:
                                description: Offset added to the address of the function
                                  for kprobe.
                                format: int64
                                type: integer
                              shouldAttach:
                                description: ShouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: Unique identifier for the attach point
                                  assigned by bpfman agent.
                                type: string
                            required:
                            - function
                            - linkId
                            - linkStatus
                            - offset
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                    name:
                      description: |-
                        Name is the name of the function that is the entry point for the BPF
                        program
                      type: string
                    programId:
                      description: |-
                        ProgramId is the id of the program in the kernel.  Not set until the
                        program is loaded.
                      format: int32
                      type: integer
                    programLinkStatus:
                      description: |-
                        ProgramLinkStatus reflects whether all links requested for the program
                        are in the correct state.
                      type: string
                    tcInfo:
                      description: tc defines the desired state of the application's
                        TcPrograms.
                      properties:
                        links:
                          default: []
                          description: |-
                            List of attach points for the BPF program on the given node. Each entry
                            in *AttachInfoState represents a specific, unique attach point that is
                            derived from *AttachInfo by fully expanding any selectors.  Each entry
                            also contains information about the attach point required by the
                            reconciler
                          items:
                            properties:
                              containerPid:
                                description: Optional container pid to attach the
                                  tc program in.
                                format: int32
                                type: integer
                              direction:
                                description: |-
                                  Direction specifies the direction of traffic the tc program should
                                  attach to for a given network device.
                                enum:
                                - ingress
                                - egress
                                type: string
                              ifName:
                                description: Interface name to attach the tc program
                                  to.
                                type: string
                              linkId:
                                description: |-
                                  An identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  LinkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              priority:
                                description: |-
                                  Priority specifies the priority of the tc program in relation to
                                  other programs of the same type with the same attach point. It is a value
                                  from 0 to 1000 where lower values have higher precedence.
                                format: int32
                                maximum: 1000
                                minimum: 0
                                type: integer
                              proceedOn:
                                description: |-
                                  ProceedOn allows the user to call other tc programs in chain on this exit code.
                                  Multiple values are supported by repeating the parameter.
                                items:
                                  enum:
                                  - unspec
                                  - ok
                                  - reclassify
                                  - shot
                                  - pipe
                                  - stolen
                                  - queued
                                  - repeat
                                  - redirect
                                  - trap
                                  - dispatcher_return
                                  type: string
                                maxItems: 11
                                type: array
                              shouldAttach:
                                description: ShouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: Unique identifier for the attach point
                                  assigned by bpfman agent.
                                type: string
                            required:
                            - direction
                            - ifName
                            - linkId
                            - linkStatus
                            - priority
                            - proceedOn
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                    tcxInfo:
                      description: tcx defines the desired state of the application's
                        TcxPrograms.
                      properties:
                        links:
                          default: []
                          description: |-
                            List of attach points for the BPF program on the given node. Each entry
                            in *AttachInfoState represents a specific, unique attach point that is
                            derived from *AttachInfo by fully expanding any selectors.  Each entry
                            also contains information about the attach point required by the
                            reconciler
                          items:
                            properties:
                              containerPid:
                                description: Optional container pid to attach the
                                  tcx program in.
                                format: int32
                                type: integer
                              direction:
                                description: |-
                                  Direction specifies the direction of traffic the tcx program should
                                  attach to for a given network device.
                                enum:
                                - ingress
                                - egress
                                type: string
                              ifName:
                                description: Interface name to attach the tcx program
                                  to.
                                type: string
                              linkId:
                                description: |-
                                  An identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  LinkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              priority:
                                description: |-
                                  Priority specifies the priority of the tcx program in relation to
                                  other programs of the same type with the same attach point. It is a value
                                  from 0 to 1000 where lower values have higher precedence.
                                format: int32
                                maximum: 1000
                                minimum: 0
                                type: integer
                              shouldAttach:
                                description: ShouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: Unique identifier for the attach point
                                  assigned by bpfman agent.
                                type: string
                            required:
                            - direction
                            - ifName
                            - linkId
                            - linkStatus
                            - priority
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                    tracepointInfo:
                      description: tracepoint defines the desired state of the application's
                        TracepointPrograms.
                      properties:
                        links:
                          default: []
                          description: |-
                            List of attach points for the BPF program on the given node. Each entry
                            in *AttachInfoState represents a specific, unique attach point that is
                            derived from *AttachInfo by fully expanding any selectors.  Each entry
                            also contains information about the attach point required by the
                            reconciler
                          items:
                            properties:
                              linkId:
                                description: |-
                                  An identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  LinkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              name:
                                description: The name of a kernel tracepoint to attach
                                  the bpf program to.
                                type: string
                              shouldAttach:
                                description: ShouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: Unique identifier for the attach point
                                  assigned by bpfman agent.
                                type: string
                            required:
                            - linkId
                            - linkStatus
                            - name
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                    type:
                      description: EBPFProgType defines the supported eBPF program
                        types
                      enum:
                      - xdp
                      - tc
                      - tcx
                      - fentry
                      - fexit
                      - kprobe
                      - uprobe
                      - tracepoint
                      type: string
                    uprobeInfo:
                      description: uprobe defines the desired state of the application's
                        UprobePrograms.
                      properties:
                        links:
                          default: []
                          description: |-
                            List of attach points for the BPF program on the given node. Each entry
                            in *AttachInfoState represents a specific, unique attach point that is
                            derived from *AttachInfo by fully expanding any selectors.  Each entry
                            also contains information about the attach point required by the
                            reconciler
                          items:
                            properties:
                              containerPid:
                                description: Optional container pid to attach the
                                  uprobe program in.
                                format: int32
                                type: integer
                              function:
                                description: Function to attach the uprobe to.
                                type: string
                              linkId:
                                description: |-
                                  An identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  LinkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              offset:
                                default: 0
                                description: Offset added to the address of the function
                                  for uprobe.
                                format: int64
                                type: integer
                              pid:
                                description: |-
                                  Only execute uprobe for given process identification number (PID). If PID
                                  is not provided, uprobe executes for all PIDs.
                                format: int32
                                type: integer
                              shouldAttach:
                                description: ShouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              target:
                                description: Library name or the absolute path to
                                  a binary or library.
                                type: string
                              uuid:
                                description: Unique identifier for the attach point
                                  assigned by bpfman agent.
                                type: string
                            required:
                            - linkId
                            - linkStatus
                            - shouldAttach
                            - target
                            - uuid
                            type: object
                          type: array
                      type: object
                    xdpInfo:
                      description: xdp defines the desired state of the application's
                        XdpPrograms.
                      properties:
                        links:
                          default: []
                          description: |-
                            List of attach points for the BPF program on the given node. Each entry
                            in *AttachInfoState represents a specific, unique attach point that is
                            derived from *AttachInfo by fully expanding any selectors.  Each entry
                            also contains information about the attach point required by the
                            reconciler
                          items:
                            properties:
                              containerPid:
                                description: Optional container pid to attach the
                                  xdp program in.
                                format: int32
                                type: integer
                              ifName:
                                description: Interface name to attach the xdp program
                                  to.
                                type: string
                              linkId:
                                description: |-
                                  An identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  LinkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              priority:
                                description: |-
                                  Priority specifies the priority of the xdp program in relation to
                                  other programs of the same type with the same attach point. It is a value
                                  from 0 to 1000 where lower values have higher precedence.
                                format: int32
                                maximum: 1000
                                minimum: 0
                                type: integer
                              proceedOn:
                                description: |-
                                  ProceedOn allows the user to call other xdp programs in chain on this exit code.
                                  Multiple values are supported by repeating the parameter.
                                items:
                                  enum:
                                  - aborted
                                  - drop
                                  - pass
                                  - tx
                                  - redirect
                                  - dispatcher_return
                                  type: string
                                maxItems: 6
                                type: array
                              shouldAttach:
                                description: ShouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: Unique identifier for the attach point
                                  assigned by bpfman agent.
                                type: string
                            required:
                            - ifName
                            - linkId
                            - linkStatus
                            - priority
                            - proceedOn
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                  required:
                  - name
                  - programLinkStatus
                  type: object
                  x-kubernetes-validations:
                  - message: xdpInfo configuration is required when type is xdp, and
                      forbidden otherwise
                    rule: 'has(self.type) && self.type == ''xdp'' ?  has(self.xdpInfo)
                      : !has(self.xdpInfo)'
                  - message: tcInfo configuration is required when type is tc, and
                      forbidden otherwise
                    rule: 'has(self.type) && self.type == ''tc'' ?  has(self.tcInfo)
                      : !has(self.tcInfo)'
                  - message: tcxInfo configuration is required when type is tcx, and
                      forbidden otherwise
                    rule: 'has(self.type) && self.type == ''tcx'' ?  has(self.tcxInfo)
                      : !has(self.tcxInfo)'
                  - message: fentryInfo configuration is required when type is fentry,
                      and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''fentry'' ?  has(self.fentryInfo)
                      : !has(self.fentryInfo)'
                  - message: fexitInfo configuration is required when type is fexit,
                      and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''fexit'' ?  has(self.fexitInfo)
                      : !has(self.fexitInfo)'
                  - message: kprobeInfo configuration is required when type is kprobe,
                      and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''kprobe'' ?  has(self.kprobeInfo)
                      : !has(self.kprobeInfo)'
                  - message: uprobeInfo configuration is required when type is uprobe,
                      and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''uprobe'' ?  has(self.uprobeInfo)
                      : !has(self.uprobeInfo)'
                  - message: tracepointInfo configuration is required when type is
                      tracepoint, and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''tracepoint'' ?  has(self.tracepointInfo)
                      : !has(self.tracepointInfo)'
                type: array
              updateCount:
                description: |-
                  The number of times the BpfApplicationState has been updated.  Set to 1
                  when the object is created, then it is incremented prior to each update.
                  This allows us to verify that the API server has the updated object prior
                  to starting a new Reconcile operation.
                format: int64
                type: integer
            required:
            - appLoadStatus
            - node
            - updateCount
            type: object
          status:
            description: BpfAppStatus reflects the status of a BpfApplication or BpfApplicationState
              object
            properties:
              conditions:
                description: |-
                  For a BpfApplication object, Conditions contains the global cluster state
                  for the object. For a BpfApplicationState object, Conditions contains the
                  state of the BpfApplication object on the given node.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
